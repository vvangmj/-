$date
	Fri Nov 15 20:05:51 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Exper5_2 $end
$scope module e5_2 $end
$var wire 5 ! addr [4:0] $end
$var wire 1 " clk $end
$var wire 8 # data_in [7:0] $end
$var wire 1 $ rd $end
$var wire 1 % rst $end
$var wire 1 & wrt $end
$var wire 8 ' t2 [7:0] $end
$var wire 8 ( t1 [7:0] $end
$var wire 8 ) data_out [7:0] $end
$scope module rahign $end
$var wire 4 * addr [3:0] $end
$var wire 1 " clk $end
$var wire 1 + cs $end
$var wire 4 , data_in [3:0] $end
$var wire 4 - data_out [3:0] $end
$var wire 1 $ rd $end
$var wire 1 % rst $end
$var wire 1 & wrt $end
$var reg 4 . data [3:0] $end
$var integer 32 / i [31:0] $end
$upscope $end
$scope module ralow $end
$var wire 4 0 addr [3:0] $end
$var wire 1 " clk $end
$var wire 1 1 cs $end
$var wire 4 2 data_in [3:0] $end
$var wire 4 3 data_out [3:0] $end
$var wire 1 $ rd $end
$var wire 1 % rst $end
$var wire 1 & wrt $end
$var reg 4 4 data [3:0] $end
$var integer 32 5 i [31:0] $end
$upscope $end
$scope module rbhigh $end
$var wire 4 6 addr [3:0] $end
$var wire 1 " clk $end
$var wire 1 7 cs $end
$var wire 4 8 data_in [3:0] $end
$var wire 4 9 data_out [3:0] $end
$var wire 1 $ rd $end
$var wire 1 % rst $end
$var wire 1 & wrt $end
$var reg 4 : data [3:0] $end
$var integer 32 ; i [31:0] $end
$upscope $end
$scope module rblow $end
$var wire 4 < addr [3:0] $end
$var wire 1 " clk $end
$var wire 1 = cs $end
$var wire 4 > data_in [3:0] $end
$var wire 4 ? data_out [3:0] $end
$var wire 1 $ rd $end
$var wire 1 % rst $end
$var wire 1 & wrt $end
$var reg 4 @ data [3:0] $end
$var integer 32 A i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1111 A
bx @
bx ?
bx >
1=
b0 <
b1111 ;
bx :
bx 9
bx 8
17
b0 6
b1111 5
bx 4
bx 3
bx 2
01
b0 0
b1111 /
bx .
bx -
bx ,
0+
b0 *
bx )
bx (
bx '
0&
1%
0$
bx #
0"
b0 !
$end
#10
b1010 0
b1010 *
b1010 <
b1010 6
b1010 !
#50
b1111 ;
b1111 A
b1111 /
b1111 5
1"
#70
0%
1$
#100
0"
#150
b0 )
b0 3
b0 4
b0 (
b0 -
b0 .
b0 ?
b0 @
b0 '
b0 9
b0 :
1"
#190
0=
07
11
b1101 0
1+
b1101 *
b1101 <
b1101 6
b11101 !
#200
0"
#250
1"
#300
0"
#350
1"
#390
b1010 2
b1010 ,
b1010 >
b1010 8
1&
b10101010 #
#400
0"
#450
1"
#500
0"
#550
1"
#590
0&
#600
0"
#650
b10101010 )
b1010 9
b1010 :
b10101010 '
b1010 ?
b1010 @
b1010 -
b1010 .
b10101010 (
b1010 3
b1010 4
1"
#700
0"
#750
1"
#800
0"
#850
1"
#890
